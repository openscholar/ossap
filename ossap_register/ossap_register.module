<?php

/**
 * @file
 * Allows on server to create vsites on another, through the other server's REST api calls.
 */


function ossap_register_menu_alter(&$items) {
  $items['site/register']['page arguments'] = array('ossap_register_site_register_form');
  $items['site/register']['file path'] = drupal_get_path('module', 'ossap_register');
  $items['site/register']['file'] = 'ossap_register.form.inc';
  $items['site/register']['access callback'] = TRUE;
}

/**
 * Create a vsite via REST
 *
 * @param string $name
 * @param string $purl
 * @param uid $author
 * @param string $bundle
 * @param string $preset
 * @param int $parent
 * @param int $visibility
 */
function ossap_create_vsite($domain ,$name, $purl, $author, $bundle, $preset, $parent, $visibility){

  $new_site = array(
    'body'      => array(LANGUAGE_NONE => array(array())),
    'title'     => $name,
    'type'			=> $bundle,
    'promote'   => 0,
    'revision'  => 1,
    'log'       => '',
    'status'    => 1,
    'sticky'    => 0,
    'language'  => LANGUAGE_NONE,
    'author'    => $author,
    'spaces_preset_og' => $preset,
    'purl' 			=> array(
								    'value' => $purl,
								    'provider'=>'vsite_og',
								    'id'=>NULL,
							     ),
  );

  // Sets the parent relationship if this is a subsite with a parent specified.
  if (isset($parent) && $parent) {
    $new_site['field_group_parent'] = array(LANGUAGE_NONE => array(array(
      'target_id' => $parent,
      'access' => TRUE,
    )));
  }

  // Sets the site visibility value if the module is available and specified.
  if (module_exists('vsite_access')) {
	  if (isset($visibility)) {
	    $new_site[VSITE_ACCESS_FIELD] = $visibility;
	  }
  }

  $servers = variable_get('ossap_child_domains', array());
  if (is_string($servers)) {
    $servers = explode(',', $servers);
  }
  if(isset($servers[$domain]['restuser'])){
    $rest_auth = $servers[$domain]['restuser'];
  }else{
    error_log("Unable to find authentication information for domain [{$domain}]");
    $rest_auth = "";
  }

  module_load_include('inc', 'ossap_register', 'includes/ossap_resthelper');
  $json = drupal_json_encode($new_site);
  $result = ossap_httpRequest("http://{$domain}/node", 'POST', $rest_auth, $json);
  $return = drupal_json_decode($result);

  if(!isset($return['id'])){
    return false;
  }

  //Add vsite nid
  $new_site['nid'] = $return['id'];

  return (object) $new_site;
}

/**
 * Create a User via REST api call
 * @param unknown_type $user_options
 */
function ossap_user_create($domain, $user_options){
  $servers = variable_get('ossap_child_domains', array());
  if (is_string($servers)) {
    $servers = explode(',', $servers);
  }
  if(isset($servers[$domain]['restuser'])){
    $rest_auth = $servers[$domain]['restuser'];
  }else{
    error_log("Unable to find authentication information for domain [{$domain}]");
    $rest_auth = "";
  }

  module_load_include('inc', 'ossap_register', 'includes/ossap_resthelper');
  $json = drupal_json_encode($user_options);
  $result = ossap_httpRequest("http://{$domain}/user", 'POST', $rest_auth, $json);
  $user = drupal_json_decode($result);

  return (object) $user;
}

/**
 * Checks if a user with these credentials exists
 */
function ossap_user_exists($domain, $username) {
  $servers = variable_get('ossap_child_domains', array());
  if (is_string($servers)) {
    $servers = explode(',', $servers);
  }
  if (isset($servers[$domain]['restuser'])){
    $rest_auth = $servers[$domain]['restuser'];
  }
  else {
    error_log("Unable to find authentication information for domain [{$domain}]");
    $rest_auth = "";
  }


  module_load_include('inc', 'ossap_register', 'includes/ossap_resthelper');
  $result = ossap_httpRequest("http://$domain/site/user/exists/$username", 'GET', $rest_auth);
  $data = drupal_json_decode($result);

  return $data['uid'];
}

/**
 * Generates the success message to display when vsite register form is submited.
 *
 * @return string $message
 *   The message shown to site owners after a successful web site registration.
 */
function ossap_vsite_register_message($form, $domain, $purl, $href, $user_is_anonymous = true, $created_on_behalf = false) {

  // Displays "the site" or "your site" depending on current users' permission.
  if ($created_on_behalf) {
    $whose_site = 'the';
  }
  else {
    $whose_site = 'your';
  }

  $link = l(t('Go there now &raquo;'), $href, array(
    'html' => TRUE,
    'attributes' => array(
      'title' => t('Visit your new site now'),
      'class' => array('os-green-button')
    )
  ));

  // Prepares an array of messages to display to the user,
  // to be rendered each as individual paragraph elements.
  $paragraphs = array();
  $paragraphs[] = t('Success! @whose new site has been created.', array('@whose' => ucfirst($whose_site)));
  if ($user_is_anonymous) {
    $paragraphs[] = t('Check your email account for further details on how to login in to start adding features and content.');
  }
  $paragraphs[] = t('The url of @whose site is @base_url/@domain '. $link, array('@whose' => $whose_site, '@base_url' => $domain, '@domain' => $purl));

  // Prepares the build array for other modules to modify.
  $build = array(
    'container' => array(
      '#type' => 'container',
      '#attributes' => array(
        'id' => 'success-message',
        'class' => array('status'),
      ),
      'message_text' => array(
        '#type' => 'markup',
        '#markup' => '<p>' . implode('</p><p>', $paragraphs) . '</p>',
      ),
    ),
  );

  // Gives other modules a chance to alter message
  module_invoke_all('vsite_register_message', $build, $form, $purl);
  $message = drupal_render($build);

  return $message;
}

/**
 * Implements hook_form_FORM_ID_alter() for os_settings_form.
 */
function ossap_register_form_os_settings_form_alter(&$form, &$form_state, $form_id) {
  $default_value = variable_get('ossap_child_domains', '');
  if (is_array($default_value)) {
    $default_value = implode(',', $default_value);
  }
  $form['ossap'] = array(
    '#type' => 'fieldset',
    '#title' => t('Single Access Point'),
    '#weight' => 15,
    '#collapsible' => TRUE,
    '#collapsed' => TRUE,
  );
  $form['ossap']['ossap_child_domains'] = array(
    '#type' => 'textfield',
    '#title' => t('Child domains'),
    '#weight' => 1,
    '#default_value' => $default_value,
  );
}
